---
title: "neophyte and red list analysis"
format: html
---

Load necessary libraries:
```{r}
library(readr)
library(dplyr)
library(ggplot2)
library(tidyr)
```

Read combined data:
```{r}
data <- read_csv("../Daten/Intermediate/combined_data.csv")
data$`Species_unified_2004-23` <- sub(" cf\\.", "", data$`Species_unified_2004-23`)
data <- data[!endsWith(data$`Species_unified_2004-23`," spec."),]
data <- data[is.na(data$min_climax_dist) | data$min_climax_dist < 90 | data$min_fire_dist < 90,] # remove goedicke plots which are far away
taxon_conversion <- read_csv("../Daten/Intermediate/leuk_landolt_try_midolo_eive_taxon_conversion.csv")
landolt_data <- read_csv("../Daten/Landolt/2023-03-29_FI-export_Stefan_Widmer.csv")

check_list <- read_csv("../Daten/InfoFlora/Checklist_2017_simple_version_20230503.csv")
check_list$neophyt <- !is.na(check_list$`Indigenat CH`) & check_list$`Indigenat CH` %in% c("N", "NA", "NC")

red_list <- read_csv("../Daten/RedList/RL_Arten_2016.csv")

temp <- left_join(data, taxon_conversion, join_by(`Species_unified_2004-23` == infoflora_taxon))
complete_data <- left_join(temp, landolt_data, join_by(landolt_taxa == Taxon))
complete_data <- left_join(complete_data, check_list, join_by(check_list == Taxonname))
complete_data <- left_join(complete_data, red_list, join_by(`Species_unified_2004-23` == `Scientific name`))
```

```{r}
unique(complete_data$`Species_unified_2004-23`[is.na(complete_data$EG)])
data_functional_group <- complete_data[!is.na(complete_data$EG),]
data_functional_group <- data_functional_group[data_functional_group$EG != '-',]
nrow(data_functional_group) / sum(data_functional_group$EG %in% c('1', '2', '3', '4', '5', '6', '7', '8'))


title <- "all altitudes"

create_functional_group_plot <- function(data, title) {
  data_functional_group <- distinct(data, year, global_id, `Species_unified_2004-23`, EG)

  tmp <- data_functional_group |> 
    select(year, global_id, EG) |>
    group_by(year, global_id) |>
    summarise(
      n_forest_plant = sum(EG == '1'),
      n_mountain_plant = sum(EG == '2'),
      n_low_elevation_pioneer = sum(EG == '3'),
      n_water = sum(EG == '4'),
      n_wetland = sum(EG == '5'),
      n_dry_meadow = sum(EG == '6'),
      n_ruderal = sum(EG == '7'),
      n_fertilized_meadow = sum(EG == '8')
    )
  
  plot <- pivot_longer(tmp, c("n_forest_plant", "n_mountain_plant", "n_low_elevation_pioneer", "n_water", "n_wetland", "n_dry_meadow", "n_ruderal", "n_fertilized_meadow")) |> ggplot(aes(fill=name, y=value, x=year)) + 
      geom_boxplot() +
      ggtitle(paste("number of plants in functional groups at ", title))
  ggsave(paste("../Daten/Results/FunctionalGroups/number_of_plants_in_functional_groups_at", title, ".png"), plot = plot)
  
  tmp <- data_functional_group |> 
    select(year, global_id, EG) |>
    group_by(year, global_id) |>
    summarise(
      p_forest_plant = 100 * sum(EG == '1') / length(global_id),
      p_mountain_plant = 100 * sum(EG == '2') / length(global_id),
      p_low_elevation_pioneer = 100 * sum(EG == '3') / length(global_id),
      p_water = 100 * sum(EG == '4') / length(global_id),
      p_wetland = 100 * sum(EG == '5') / length(global_id),
      p_dry_meadow = 100 * sum(EG == '6') / length(global_id),
      p_ruderal = 100 * sum(EG == '7') / length(global_id),
      p_fertilized_meadow = 100 * sum(EG == '8') / length(global_id)
    )
  
  plot <- pivot_longer(tmp, c("p_forest_plant", "p_mountain_plant", "p_low_elevation_pioneer", "p_water", "p_wetland", "p_dry_meadow", "p_ruderal", "p_fertilized_meadow")) |> ggplot(aes(fill=name, y=value, x=year)) + 
      geom_boxplot() +
      ggtitle(paste("% of plants in functional groups at ", title))
  ggsave(paste("../Daten/Results/FunctionalGroups/percent_plants_in_functional_groups_at", title, ".png"), plot = plot)
  
  
  tmp <- tmp |> 
    group_by(year) |>
    summarise(
      p_forest_plant = mean(p_forest_plant),
      p_mountain_plant = mean(p_mountain_plant),
      p_low_elevation_pioneer = mean(p_low_elevation_pioneer),
      p_water = mean(p_water),
      p_wetland = mean(p_wetland),
      p_dry_meadow = mean(p_dry_meadow),
      p_ruderal = mean(p_ruderal),
      p_fertilized_meadow = mean(p_fertilized_meadow)
    ) 
  
  tmp <- pivot_longer(tmp, c("p_forest_plant", "p_mountain_plant", "p_low_elevation_pioneer", "p_water", "p_wetland", "p_dry_meadow", "p_ruderal", "p_fertilized_meadow"))
  
  plot <- ggplot(tmp, aes(fill=name, y=value, x=year)) + 
      geom_bar(position="stack", stat="identity") +
      ggtitle(paste("% of plants in functional groups at ", title))
  ggsave(paste("../Daten/Results/FunctionalGroups/percent_plants_in_functional_groups_stacked_at", title, ".png"), plot = plot)
}

create_functional_group_plot(data_functional_group, "all altitudes")
create_functional_group_plot(data_functional_group[data_functional_group$altitude_band == "high",], "high altitudes")
create_functional_group_plot(data_functional_group[data_functional_group$altitude_band == "mid",], "mid altitudes")
create_functional_group_plot(data_functional_group[data_functional_group$altitude_band == "low",], "low altitudes")

```

Do red list analysis:
```{r}
title <- "all altitude"

analyze_red_list_data <- function(data, title) {
  tmp <- data |> 
    select(year, global_id, CAT) |>
    group_by(year, global_id) |>
    summarise(
      n_lc = sum(CAT == 'LC'),
      n_nt = sum(CAT == 'NT'),
      n_vu = sum(CAT == 'VU'),
      n_cr = sum(CAT == 'CR'),
      n_en = sum(CAT == 'EN')
    )
  
  plot <- pivot_longer(tmp, c("n_nt", "n_vu", "n_cr", "n_en")) |> ggplot(aes(fill=name, y=value, x=year)) + 
      geom_boxplot() +
      ggtitle(paste("number of plants per plot in red list categories at ", title))
  ggsave(paste("../Daten/Results/RedList/number_of_plants_per_plot_in_red_list_cat_at", title, ".png"), plot = plot)
  
  
  tmp <- data |> 
    select(year, global_id, CAT) |>
    group_by(year) |>
    summarise(
      n_lc = sum(CAT == 'LC') / length(unique(global_id)),
      n_nt = sum(CAT == 'NT') / length(unique(global_id)),
      n_vu = sum(CAT == 'VU') / length(unique(global_id)),
      n_cr = sum(CAT == 'CR') / length(unique(global_id)),
      n_en = sum(CAT == 'EN') / length(unique(global_id))
    )
  
  plot <-  pivot_longer(tmp, c("n_nt", "n_vu", "n_cr", "n_en")) |> ggplot(aes(fill=name, y=value, x=year)) + 
      geom_bar(position="stack", stat="identity") +
      ggtitle(paste("number of red list plant observation per plot at ", title))
  ggsave(paste("../Daten/Results/RedList/number_of_plants_per_plot_in_red_list_cat_stacked_at", title, ".png"), plot = plot)
  
  tmp <- data |> 
    select(year, global_id, CAT) |>
    group_by(year, global_id) |>
    summarise(
      p_lc = 100 * sum(CAT == 'LC') / length(global_id),
      p_nt = 100 * sum(CAT == 'NT') / length(global_id),
      p_vu = 100 * sum(CAT == 'VU') / length(global_id),
      p_cr = 100 * sum(CAT == 'CR') / length(global_id),
      p_en = 100 * sum(CAT == 'EN') / length(global_id)
    )
  
  plot <- pivot_longer(tmp, c("p_nt", "p_vu", "p_cr", "p_en")) |> ggplot(aes(fill=name, y=value, x=year)) + 
      geom_boxplot() +
      ggtitle(paste("% of plants on each plot in red list cat at ", title))
  ggsave(paste("../Daten/Results/RedList/percent_plants_in_plots_in_red_list_cat_at", title, ".png"), plot = plot)
  
  
  tmp <- tmp |> 
    group_by(year) |>
    summarise(
      p_lc = mean(p_lc),
      p_nt = mean(p_nt),
      p_vu = mean(p_vu),
      p_cr = mean(p_cr),
      p_en = mean(p_en)
    ) 
  
  tmp <- pivot_longer(tmp, c("p_nt", "p_vu", "p_cr", "p_en"))
  
  plot <- ggplot(tmp, aes(fill=name, y=value, x=year)) + 
      geom_bar(position="stack", stat="identity") +
      ggtitle(paste("% of plants on plots in red list cat at ", title))
  ggsave(paste("../Daten/Results/RedList/percent_plants_in_plots_in_red_list_cat_stacked_at", title, ".png"), plot = plot)
  
  
  data <- distinct(data, year, `Species_unified_2004-23`, CAT)
  tmp <- data |> 
    select(year, CAT) |>
    group_by(year) |>
    summarise(
      n_lc = sum(CAT == 'LC'),
      n_nt = sum(CAT == 'NT'),
      n_vu = sum(CAT == 'VU'),
      n_cr = sum(CAT == 'CR'),
      n_en = sum(CAT == 'EN')
    )
  
  tmp <- pivot_longer(tmp, c("n_nt", "n_vu", "n_cr", "n_en"))
  
  plot <- ggplot(tmp, aes(fill=name, y=value, x=year)) + 
      geom_bar(position="stack", stat="identity") +
      ggtitle(paste("total number of plants species in red list category at ", title))
  ggsave(paste("../Daten/Results/RedList/total_number_of_red_list_species_by_year_at_", title, ".png"), plot = plot)
}

red_list_data <- complete_data[!is.na(complete_data$CAT),]

write_csv(distinct(complete_data, year, `Species_unified_2004-23`, altitude_band, CAT), "../Daten/Results/RedList/red_list_species_by_year_and_altitude.csv")

data_red_list <- distinct(red_list_data, year, global_id, `Species_unified_2004-23`, altitude_band, CAT)

analyze_red_list_data(data_red_list, "all altitudes")
analyze_red_list_data(data_red_list[data_red_list$altitude_band == "high",], "high altitudes")
analyze_red_list_data(data_red_list[data_red_list$altitude_band == "mid",], "mid altitudes")
analyze_red_list_data(data_red_list[data_red_list$altitude_band == "low",], "low altitudes")
```



Do neophyte analysis:
```{r}
title <- "all altitude"

complete_data$neophyt[is.na(complete_data$neophyt)] <- F
unique(complete_data$`Species_unified_2004-23`[complete_data$neophyt])
complete_data[is.na(complete_data$`Species_unified_2004-23`),]
complete_data[is.na(complete_data$neophyt),]

data <- complete_data

analyze_neophyte_data <- function(data, title) {
  tmp <- data |> 
    select(year, global_id, neophyt) |>
    group_by(year, global_id) |>
    summarise(
      n_neophyte = sum(neophyt)
    )
  
  plot <- tmp |> ggplot(aes(y=n_neophyte, x=year)) + 
      geom_boxplot() +
      ggtitle(paste("number of neophyte species per plot at ", title))
  ggsave(paste("../Daten/Results/Neophyte/number_of_neophytes_per_plot_at", title, ".png"), plot = plot)
  
  
  tmp <- data |> 
    select(year, global_id, neophyt) |>
    group_by(year) |>
    summarise(
      n_neophyte = sum(neophyt) / length(unique(global_id))
    )
  
  plot <-  tmp |> ggplot(aes(y=n_neophyte, x=year)) + 
      geom_bar(position="stack", stat="identity") +
      ggtitle(paste("number of neophyte observations per plot at ", title))
  ggsave(paste("../Daten/Results/Neophyte/number_of_neophytes_per_plot_barplot_", title, ".png"), plot = plot)
  
  tmp <- data |> 
    select(year, global_id, neophyt) |>
    group_by(year, global_id) |>
    summarise(
      p_neophyte = 100 * sum(neophyt) / length(global_id)
    )
  
  plot <- tmp |> ggplot(aes(y=p_neophyte, x=year)) + 
      geom_boxplot() +
      ggtitle(paste("% of neophytes on each plot at ", title))
  ggsave(paste("../Daten/Results/Neophyte/percent_neophytes_on_plots_at", title, ".png"), plot = plot)
  
  
  tmp <- tmp |> 
    group_by(year) |>
    summarise(
      p_neophyte = mean(p_neophyte)
    )
  
  plot <- ggplot(tmp, aes(y=p_neophyte, x=year)) + 
      geom_bar(position="stack", stat="identity") +
      ggtitle(paste("% of neophytes on plots at ", title))
  ggsave(paste("../Daten/Results/Neophyte/percent_neophytes_in_plots_at", title, ".png"), plot = plot)
  
  
  data <- distinct(data, year, `Species_unified_2004-23`, neophyt)
  tmp <- data |> 
    select(year, neophyt) |>
    group_by(year) |>
    summarise(
      n_neophyte = sum(neophyt)
    )
  
  plot <- ggplot(tmp, aes(y=n_neophyte, x=year)) + 
      geom_bar(position="stack", stat="identity") +
      ggtitle(paste("total number of neophyte species at ", title))
  ggsave(paste("../Daten/Results/Neophyte/total_number_of_neophyte_species_by_year_at_", title, ".png"), plot = plot)
}

write_csv(distinct(complete_data, year, `Species_unified_2004-23`, altitude_band, neophyt), "../Daten/Results/Neophyte/neophyte_species_by_year_and_altitude.csv")

data_neophyte <- distinct(complete_data, year, global_id, `Species_unified_2004-23`, altitude_band, neophyt)

analyze_neophyte_data(data_neophyte, "all altitudes")
analyze_neophyte_data(data_neophyte[data_neophyte$altitude_band == "high",], "high altitudes")
analyze_neophyte_data(data_neophyte[data_neophyte$altitude_band == "mid",], "mid altitudes")
analyze_neophyte_data(data_neophyte[data_neophyte$altitude_band == "low",], "low altitudes")
```

